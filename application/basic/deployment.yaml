# kubectl -n exercise apply -f deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exercise-app
  labels:
    app: exercise-app
spec:
  # comment if using HPA
  replicas: 1
  selector:
    matchLabels:
      app: exercise-app

  # strategy:
  #   type: RollingUpdate
  #   rollingUpdate:
  #     maxSurge: 1
  #     maxUnavailable: 1
  template:
    metadata:
      labels:
        app: exercise-app
    spec:
      # initContainers:
      #   - name: init-curl
      #     image: curlimages/curl
      #     imagePullPolicy: Always 
      #     command:
      #     - curl
      #     - -v
      #     - https://onxp.net
      
      # set service account. By default k8s will assign `default` sa to every pods
      # secret will be mounted on /var/run/secrets/kubernetes.io/serviceaccount
      # serviceAccountName: onxp-exercise-sa

      # define where to deploy
      # nodeSelector:
      #   operation: onxp-alt-pool

      containers:
        - name: exercise-app
          image: glendmaatita/exercise-app:v1.0.0
          imagePullPolicy: Always
          resources:
            requests:
              memory: 20Mi
              cpu: 20m
            limits:
              memory: 70Mi
              cpu: 100m
          
          # env
          env:
          - name: APP_URL
            value: https://exercise-app.bootcamp.onxp.net
          - name: APP_KEY
            value: randomlongstring
          # - name: MY_APP_NAME
          #   valueFrom:
          #     configMapKeyRef:
          #       name: exercise-app-cm
          #       key: APP_NAME
          # - name: MY_DB_USERNAME
          #   valueFrom:
          #     secretKeyRef:
          #       name: exercise-app-secret
          #       key: DB_USERNAME
          
          # health-check
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 1
            
          # envFrom:
          #   - configMapRef:
          #       name: exercise-app-cm
          #   - secretRef:
          #       name: exercise-app-secret

          # volumeMounts:
          # - name: app-config-volume
          #   mountPath: /etc/app/app.conf
          #   subPath: app.conf
          # - name: emptydir-volume-exercise
          #   mountPath: /data/emptydir
          # using storage with hostpath
          # - name: hostpath-volume-exercise
          #   mountPath: /data/hostpath
          # using storage with NFS
          # - name: nfs-volume-exercise
          #   mountPath: /opt/data/exercise

      restartPolicy: Always
      # imagePullSecrets:
      #   - name: docker-secret
        
      # volumes:
      # - name: emptydir-volume-exercise
      #   emptyDir: {}
      
      # - name: app-config-volume
      #   configMap:
      #     name: app-config


      # using storage with hostpath
      # - name: hostpath-volume-exercise
      #   persistentVolumeClaim:
      #     claimName: hostpath-exercise-pvc


      # using storage with NFS
      # - name: nfs-volume-exercise
      #   persistentVolumeClaim:
      #     claimName: nfs-pvc-exercise