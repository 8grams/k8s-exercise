# kubectl -n observability apply -f deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /prometheus-data/prometheus.yml
              subPath: prometheus.yml
          command:
            - --config.file=/prometheus-data/prometheus.yml
      volumes:
      - name: prometheus-config-volume
        configMap:
          name: prometheus-config
          
--- 
kind: ConfigMap
metadata: 
  name: prometheus-config
apiVersion: v1
data: 
  prometheus.yml: |
    scrape_configs:
    - job_name: 'prometheus'
      scrape_interval: 30s

      static_configs:
        - targets: ['exercise-app.exercise:9464']
          labels:
            service: 'exercise-app'
            group: 'exercise'
---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    cert-manager.io/cluster-issuer: letsencrypt-issuer
spec:
  ingressClassName: public
  rules:
    - host: prometheus.ops.onxp.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service: 
                name: prometheus
                port: 
                  number: 80
  tls:
    - hosts:
        - prometheus.ops.onxp.net
      secretName: tls-ops-prometheus
